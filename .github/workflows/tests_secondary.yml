name: "tests 2"

on:
  push:
    branches:
      - main
      - release-*
  pull_request:
    paths-ignore:
      - 'browser_patches/**'
      - 'docs/**'
    types: [ labeled ]
    branches:
      - main
      - release-*

env:
  # Force terminal colors. @see https://www.npmjs.com/package/colors
  FORCE_COLOR: 1
  FLAKINESS_CONNECTION_STRING: ${{ secrets.FLAKINESS_CONNECTION_STRING }}

jobs:
  test_linux:
    name: ${{ matrix.os }} (${{ matrix.browser }})
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        os: [ubuntu-18.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        DEBUG: pw:install
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps ${{ matrix.browser }} chromium
    - run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- npm run test -- --project=${{ matrix.browser }}
    - run: node tests/config/checkCoverage.js ${{ matrix.browser }}
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: ${{ matrix.browser }}-${{ matrix.os }}-test-results
        path: test-results

  test_mac:
    name: ${{ matrix.os }} (${{ matrix.browser }})
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, macos-12]
        browser: [chromium, firefox, webkit]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        DEBUG: pw:install
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps ${{ matrix.browser }} chromium
    - run: npm run test -- --project=${{ matrix.browser }}
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: ${{ matrix.browser }}-${{ matrix.os }}-test-results
        path: test-results

  test_win:
    name: "Windows"
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        DEBUG: pw:install
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps ${{ matrix.browser }} chromium
    - run: npm run test -- --project=${{ matrix.browser }}
      shell: bash
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: ${{ matrix.browser }}-win-test-results
        path: test-results

  test-package-installations-other-node-versions:
    name: "Installation Test ${{ matrix.os }} (${{ matrix.node_version }})"
    runs-on: ${{ matrix.os  }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
          node_version: "^18.0.0"
        - os: ubuntu-latest
          node_version: "^16.0.0"
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node_version }}
    - run: npm i -g npm@8
    - run: npm ci
      env:
        DEBUG: pw:install
    - run: npm run build
    - run: npx playwright install-deps
    - run: npm run itest
      if: matrix.os != 'ubuntu-latest'
    - run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- npm run itest
      if: matrix.os == 'ubuntu-latest'
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash

  headed_tests:
    name: "headed ${{ matrix.browser }} (${{ matrix.os }})"
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        os: [ubuntu-20.04, ubuntu-22.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        DEBUG: pw:install
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps ${{ matrix.browser }} chromium
    - run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- npm run test -- --project=${{ matrix.browser }} --headed
      if: always() && startsWith(matrix.os, 'ubuntu-')
    - run: npm run test -- --project=${{ matrix.browser }} --headed
      if: always() && !startsWith(matrix.os, 'ubuntu-')
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: always() && startsWith(matrix.os, 'ubuntu-')
      with:
        name: headful-${{ matrix.browser }}-linux-test-results
        path: test-results

  transport_linux:
    name: "Transport"
    strategy:
      fail-fast: false
      matrix:
        mode: [driver, service]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        DEBUG: pw:install
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps chromium
    - run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- npm run test -- --project='Chromium page tests'
      if: matrix.mode == 'service'
      env:
        PWTEST_MODE: ${{ matrix.mode }}
    - run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- npm run ctest
      if: matrix.mode != 'service'
      env:
        PWTEST_MODE: ${{ matrix.mode }}
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: mode-${{ matrix.mode }}-linux-test-results
        path: test-results

  tracing_linux:
    name: Tracing ${{ matrix.browser }} ${{ matrix.channel }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - browser: chromium
          - browser: firefox
          - browser: webkit
          - browser: chromium
            channel: chromium-tip-of-tree
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        DEBUG: pw:install
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps ${{ matrix.browser }} chromium ${{ matrix.channel }}
    - run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- npm run test -- --project=${{ matrix.browser }}
      env:
        PWTEST_TRACE: 1
        PWTEST_CHANNEL: ${{ matrix.channel }}
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash

  chrome_stable_linux:
    name: "Chrome Stable (Linux)"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps chrome
    - run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- npm run ctest
      env:
        PWTEST_CHANNEL: chrome
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: chrome-stable-linux-test-results
        path: test-results

  chrome_stable_win:
    name: "Chrome Stable (Win)"
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps chrome
    - run: npm run ctest
      shell: bash
      env:
        PWTEST_CHANNEL: chrome
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: chrome-stable-win-test-results
        path: test-results

  chrome_stable_mac:
    name: "Chrome Stable (Mac)"
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps chrome
    - run: npm run ctest
      env:
        PWTEST_CHANNEL: chrome
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: chrome-stable-mac-test-results
        path: test-results

  chromium_tot:
    name: Chromium TOT ${{ matrix.os }}
    runs-on: ${{ matrix.os  }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macos-12, windows-latest]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps chromium-tip-of-tree
    - run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- npm run ctest
      if: matrix.os == 'ubuntu-18.04'
      env:
        PWTEST_CHANNEL: chromium-tip-of-tree
    - run: npm run ctest
      if: matrix.os != 'ubuntu-18.04'
      env:
        PWTEST_CHANNEL: chromium-tip-of-tree
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: chromium-tot-${{ matrix.os }}-test-results
        path: test-results

  chromium_tot_headed:
    name: Chromium TOT headed ${{ matrix.os }}
    runs-on: ${{ matrix.os  }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps chromium-tip-of-tree
    - run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- npm run ctest -- --headed
      if: matrix.os == 'ubuntu-latest'
      env:
        PWTEST_CHANNEL: chromium-tip-of-tree
    - run: npm run ctest -- --headed
      if: matrix.os != 'ubuntu-latest'
      env:
        PWTEST_CHANNEL: chromium-tip-of-tree
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: chromium-tot-headed-${{ matrix.os }}-test-results
        path: test-results

  firefox_beta_linux:
    name: "Firefox Beta (Linux)"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps firefox-beta chromium
    - run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- npm run ftest
      env:
        PWTEST_CHANNEL: firefox-beta
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: firefox-beta-linux-test-results
        path: test-results

  firefox_beta_win:
    name: "Firefox Beta (Win)"
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps firefox-beta chromium
    - run: npm run ftest
      shell: bash
      env:
        PWTEST_CHANNEL: firefox-beta
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: firefox-beta-win-test-results
        path: test-results

  firefox_beta_mac:
    name: "Firefox Beta (Mac)"
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps firefox-beta chromium
    - run: npm run ftest
      env:
        PWTEST_CHANNEL: firefox-beta
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: firefox-beta-mac-test-results
        path: test-results

  edge_stable_mac:
    name: "Edge Stable (Mac)"
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps msedge
    - run: npm run ctest
      env:
        PWTEST_CHANNEL: msedge
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: msedge-stable-mac-test-results
        path: test-results


  edge_stable_win:
    name: "Edge Stable (Win)"
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps msedge
    - run: npm run ctest
      shell: bash
      env:
        PWTEST_CHANNEL: msedge
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: edge-stable-win-test-results
        path: test-results

  edge_stable_linux:
    name: "Edge Stable (Linux)"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps msedge
    - run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- npm run ctest
      env:
        PWTEST_CHANNEL: msedge
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: edge-stable-linux-test-results
        path: test-results

  edge_beta_mac:
    name: "Edge Beta (Mac)"
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps msedge-beta
    - run: npm run ctest
      env:
        PWTEST_CHANNEL: msedge-beta
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: msedge-beta-mac-test-results
        path: test-results

  edge_beta_win:
    name: "Edge Beta (Win)"
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps msedge-beta
    - run: npm run ctest
      shell: bash
      env:
        PWTEST_CHANNEL: msedge-beta
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: edge-beta-win-test-results
        path: test-results

  edge_beta_linux:
    name: "Edge Beta (Linux)"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps msedge-beta
    - run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- npm run ctest
      env:
        PWTEST_CHANNEL: msedge-beta
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: edge-beta-linux-test-results
        path: test-results

  edge_dev_mac:
    name: "Edge Dev (Mac)"
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps msedge-dev
    - run: npm run ctest
      env:
        PWTEST_CHANNEL: msedge-dev
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: msedge-dev-mac-test-results
        path: test-results

  edge_dev_win:
    name: "Edge Dev (Win)"
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps msedge-dev
    - run: npm run ctest
      shell: bash
      env:
        PWTEST_CHANNEL: msedge-dev
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: edge-dev-win-test-results
        path: test-results

  edge_dev_linux:
    name: "Edge Dev (Linux)"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps msedge-dev
    - run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- npm run ctest
      env:
        PWTEST_CHANNEL: msedge-dev
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: edge-dev-linux-test-results
        path: test-results

  chrome_beta_linux:
    name: "Chrome Beta (Linux)"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps chrome-beta
    - run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- npm run ctest
      env:
        PWTEST_CHANNEL: chrome-beta
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: chrome-beta-linux-test-results
        path: test-results

  chrome_beta_win:
    name: "Chrome Beta (Win)"
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps chrome-beta
    - run: npm run ctest
      shell: bash
      env:
        PWTEST_CHANNEL: chrome-beta
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: chrome-beta-win-test-results
        path: test-results

  chrome_beta_mac:
    name: "Chrome Beta (Mac)"
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps chrome-beta
    - run: npm run ctest
      env:
        PWTEST_CHANNEL: chrome-beta
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: chrome-beta-mac-test-results
        path: test-results

  build-playwright-driver:
    name: "build-playwright-driver"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
    - run: npm run build
    - run: npx playwright install-deps
    - run: utils/build/build-playwright-driver.sh

  smoke_test_docker_integration:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - run: npm i -g npm@8
    - run: npm ci
      env:
        DEBUG: pw:install
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm run build
    - run: npx playwright install --with-deps
    - run: ./utils/docker/build.sh --amd64 focal playwright:localbuild
    - run: PWTEST_DOCKER_BASE_IMAGE=playwright:localbuild npx playwright docker build
    - run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- npm run dtest
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
      shell: bash
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: docker-integration-test-results
        path: test-results

